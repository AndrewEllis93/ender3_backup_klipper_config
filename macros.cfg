############################# PRESSURE ADVANCE ##################################

[gcode_macro TEMPADJUSTPA]
gcode:
    # ABS
    {% if printer.heater_bed.target >= 100 %}
        SET_PRESSURE_ADVANCE ADVANCE=0.45
    # PETG
    {% elif printer.heater_bed.target > 65 and printer.heater_bed.target < 100 %}
        SET_PRESSURE_ADVANCE ADVANCE=0.8
    # PLA
    {% elif printer.heater_bed.target <= 65 %}
        SET_PRESSURE_ADVANCE ADVANCE=0.55
    # Catch-all
    {% else %}
        SET_PRESSURE_ADVANCE ADVANCE=0.55
    {% endif %}
    
############################# PRINT START / END ##################################
[gcode_macro PRINT_START]
variable_bedtemp: 0
gcode:
    # Parameters
    {% set bed = params.BED|int %}
    {% set hotend = params.HOTEND|int %}

    # Set the parameters as persistent variables so they can be referenced in PRINT_END and elsewhere 
    SET_GCODE_VARIABLE MACRO=PRINT_START VARIABLE=bedtemp VALUE={bed}   
    
    RESETSPEEDS                                                 # reset speeds and accels to config values
    BLTOUCH_DEBUG COMMAND=reset                                 # reset bltouch errors
    G28                                                         # home
    G90                                                         # absolute positioning
    G0 X117.5 Y117.5 Z10 F10800                                 # move toolhead for preheat             
    M140 S{bed}                                                 # set bed final temp
    M104 S140                                                   # set hotend to PLA no-ooze temp
    M190 S{bed}                                                 # wait for bed final temp
    G28 Z                                                       # home z
    BED_MESH_CALIBRATE                                          # generate bed mesh
    M104 S{hotend}                                              # set extruder final temp
    G1 X0.1 Y20 Z5 F5000.0                                      # move above start position
    M109 S{hotend}                                              # wait for extruder final temp
    TEMPADJUSTPA                                                # change PA based on bed temp
    G92 E0                                                      # Reset Extruder
    G1 Z2.0 F600                                                # Move Z Axis up little to prevent scratching of Heat Bed
    G1 X0.1 Y20 Z0.3 F5000.0                                    # Move to start position
    G1 X0.1 Y200.0 Z0.3 F1500.0 E15                             # Draw the first line
    G1 X0.4 Y200.0 Z0.3 F5000.0                                 # Move to side a little
    G1 X0.4 Y30 Z0.3 F1500.0 E28.33                             # Draw the second line (minus 1CM)
    G92 E0                                                      # Reset Extruder
    G1 Z0.3 F600                                                # Move Z Axis up little to prevent scratching of Heat Bed
    SET_FILAMENT_SENSOR SENSOR=filament_sensor ENABLE=1         # enable filament sensor
    
[gcode_macro PRINT_END]
#   Use PRINT_END for the slicer ending script - please customize for your slicer of choice
gcode:
    SET_FILAMENT_SENSOR SENSOR=filament_sensor ENABLE=0         # disable filament sensor
    M400                                                        # wait for buffer to clear
    G92 E0                                                      # zero the extruder
    G10                                                         # retract filament
    G91                                                         # relative positioning
    M107                                                        # turn off fan
    G1 Z5 F3000                                                 # move nozzle up 5mm
    G90                                                         # absolute positioning
    G0 Y{printer.toolhead.axis_maximum.y-5} F1800               # park nozzle at rear
    #M18                                                        # turn off steppers
    BED_MESH_CLEAR                                              # clear mesh
    M104 S0                                                     # turn off hotend
    M140 S{printer["gcode_macro PRINT_START"].bedtemp|int}      # return the bed to temp, some slicers like to turn it off
    BEEP I=3                                                    # beep 3 times

############################# MISC ##################################

# Conditional G28 (home if not already homed)
[gcode_macro CG28]
gcode:
   {% if "x" not in printer.toolhead.homed_axes or "y" not in printer.toolhead.homed_axes or "z" not in printer.toolhead.homed_axes %}
   G28
   {% endif %}

[gcode_macro ZCG28]
gcode:
    {% if "z" not in printer.toolhead.homed_axes %}
    G28 Z
    G28 Z
    {% endif %}
    
[gcode_macro ZDOWN]
gcode:
    SET_GCODE_OFFSET Z_ADJUST=-0.025 MOVE=1

[gcode_macro ZUP]
gcode:
    SET_GCODE_OFFSET Z_ADJUST=0.025 MOVE=1
    
[gcode_macro BMC]
gcode:
    BED_MESH_CALIBRATE  
    
# Convert Marlin linear advance commands to SET_PRESSURE_ADVANCE.
# Used in conjunction with Marlin's linear advance calibration tool: https://marlinfw.org/tools/lin_advance/k-factor.html
[gcode_macro M900]
gcode:
    # Parameters
    {% set k = params.K|default(0)|float %}
    
    SET_PRESSURE_ADVANCE ADVANCE={k}
 
[gcode_macro BEEP]
gcode:
    # Parameters
    {% set i = params.I|default(1)|int %}        ; Iterations (number of times to beep).
    {% set dur = params.DUR|default(100)|int %}  ; Duration/wait of each beep in ms. Default 100ms.

    {% for iteration in range(i|int) %}
        SET_PIN PIN=beeper VALUE=1
        G4 P{dur}
        SET_PIN PIN=beeper VALUE=0
		G4 P{dur}
    {% endfor %}
    
[gcode_macro OFF]
gcode:
    M84                                              ; turn steppers off
    TURN_OFF_HEATERS                                 ; turn bed / hotend off
    M107                                             ; turn print cooling fan off
    
[gcode_macro RESETSPEEDS]
gcode:
    SET_VELOCITY_LIMIT VELOCITY={printer.configfile.settings.printer.max_velocity} ACCEL={printer.configfile.settings.printer.max_accel}  ACCEL_TO_DECEL={printer.configfile.settings.printer.max_accel_to_decel} SQUARE_CORNER_VELOCITY={printer.configfile.settings.printer.square_corner_velocity} 
    
# Replace M109 (Wait for Hotend Temperature) with TEMPERATURE_WAIT so we don't have to wait for PID to level off.
[gcode_macro M109]
rename_existing: M99109
gcode:
    #Parameters
    {% set s = params.S|float %}
    
    {% if s != 0 %}
        M104 {% for p in params %}{'%s%s' % (p, params[p])}{% endfor %}
        TEMPERATURE_WAIT SENSOR=extruder MINIMUM={s} MAXIMUM={s+1}
    {% endif %}
    
# Override M190 (Wait for Bed Temperature) with TEMPERATURE_WAIT so we don't have to wait for PID to level off.
[gcode_macro M190]
rename_existing: M99190
gcode:
    #Parameters
    {% set s = params.S|float %}
    
    {% if s != 0 %}
        M140 {% for p in params %}{'%s%s' % (p, params[p])}{% endfor %}   ; Set bed temp
        TEMPERATURE_WAIT SENSOR=heater_bed MINIMUM={s} MAXIMUM={s+1}      ; Wait for bed temp
    {% endif %}
    
############################# PARKING ##################################

[gcode_macro PARKFRONT]
gcode:
    CG28                                                                                                                        ; home if not already homed
    SAVE_GCODE_STATE NAME=PARKFRONT
    G90                                                                                                                         ; absolute positioning
    G0 X{printer.toolhead.axis_maximum.x/2} Y{printer.toolhead.axis_minimum.y+5} Z{printer.toolhead.axis_maximum.z/2} F19500        ; park front center, center Z
    RESTORE_GCODE_STATE NAME=PARKFRONT
    
[gcode_macro PARKFRONTLOW]
gcode:
    CG28                                                                                                                        ; home if not already homed
    SAVE_GCODE_STATE NAME=PARKFRONT
    G90                                                                                                                         ; absolute positioning
    G0 X{printer.toolhead.axis_maximum.x/2} Y{printer.toolhead.axis_minimum.y+5} Z20 F19500                                     ; park front center, 50mm up
    RESTORE_GCODE_STATE NAME=PARKFRONT
    
[gcode_macro PARKFRONTHIGH]
gcode:
    CG28                                                                                                                        ; home if not already homed
    SAVE_GCODE_STATE NAME=PARKFRONTHIGH
    G90                                                                                                                         ; absolute positioning
    G0 X{printer.toolhead.axis_maximum.x/2} Y{printer.toolhead.axis_minimum.y+5} Z{printer.toolhead.axis_maximum.z-20} F19500                                       ; park front center, 50mm up
    RESTORE_GCODE_STATE NAME=PARKFRONTHIGH
    
[gcode_macro PARKCENTER]
gcode:
    CG28                                                                                                                        ; home if not already homed
    SAVE_GCODE_STATE NAME=PARKCENTER
    G90                                                                                                                         ; absolute positioning
    G0 X{printer.toolhead.axis_maximum.x/2} Y{printer.toolhead.axis_maximum.y/2} Z{printer.toolhead.axis_maximum.z/2} F19500    ; park center of build volume
    RESTORE_GCODE_STATE NAME=PARKCENTER
    
[gcode_macro PARKBED]
gcode:
    CG28                                                                                                                        ; home if not already homed
    SAVE_GCODE_STATE NAME=PARKBED
    G90                                                                                                                         ; absolute positioning
    G0 X{printer.toolhead.axis_maximum.x/2} Y{printer.toolhead.axis_maximum.y/2} Z15 F19500                                     ; park above center of bed
    RESTORE_GCODE_STATE NAME=PARKBED
    
############################# FILAMENT ##################################
    
[gcode_macro UNLOAD_FILAMENT]
#   Extrusion lengths must be adjusted for your particular configuration before use
gcode:
    SAVE_GCODE_STATE NAME=UNLOADFILAMENT
    M83                                   ; set extruder to relative
    G1 E10 F300                           ; extrude a little to soften tip
    G1 E-530 F1800                         ; retract filament completely
    RESTORE_GCODE_STATE NAME=UNLOADFILAMENT

[gcode_macro LOAD_FILAMENT]
#   Extrusion lengths must be adjusted for your particular configuration before use
gcode:
    SAVE_GCODE_STATE NAME=LOADFILAMENT
    M83 ; set extruder to relative
    G1 E465 F1800                         ; quickly load filament to down bowden
    G1 E20 F300                           ; slower extrusion for hotend path
    G1 E20 F150                           ; prime nozzle with filament
    RESTORE_GCODE_STATE NAME=LOADFILAMENT
    
[gcode_macro HOT_UNLOAD]
gcode:
    # Parameters
    {% set t = params.T|default(210)|int %}
    
    M104 S{t}
    PARKFRONTHIGH
    M109 S{t}
    UNLOAD_FILAMENT
    
[gcode_macro HOT_LOAD]
gcode:
    # Parameters
    {% set t = params.T|default(210)|int %}
    
    M104 S{t}
    PARKFRONTHIGH
    M109 S{t}
    LOAD_FILAMENT
  
# Fluidd SD printing
[gcode_macro CANCEL_PRINT]
rename_existing: BASE_CANCEL_PRINT
gcode:
    SDCARD_RESET_FILE
    PRINT_END
    BASE_CANCEL_PRINT
    
############################## PAUSE/RESUME/RUNOUT ##################################
    
# Pause and park toolhead at front center. Z hop by 10mm.
[gcode_macro PAUSE]
rename_existing: BASE_PAUSE
gcode:
    # Parameters
    {% set z = params.Z|default(10)|int %}                                                                                  ; z hop amount
    
    {% if printer['pause_resume'].is_paused|int == 0 %}     
        SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=zhop VALUE={z}                                                             ; set z hop variable for reference in resume macro
        SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=etemp VALUE={printer['extruder'].target}                                   ; set hotend temp variable for reference in resume macro
                                
        SET_FILAMENT_SENSOR SENSOR=filament_sensor ENABLE=0                                                                 ; disable filament sensor       
        SAVE_GCODE_STATE NAME=PAUSE                                                                                         ; save current print position for resume                
        BASE_PAUSE                                                                                                          ; pause print
        {% if (printer.gcode_move.position.z + z) < printer.toolhead.axis_maximum.z %}                                      ; check that zhop doesn't exceed z max
            G91                                                                                                             ; relative positioning
            G1 Z{z} F900                                                                                                    ; raise Z up by z hop amount
        {% else %}
            { action_respond_info("Pause zhop exceeds maximum Z height.") }                                                 ; if z max is exceeded, show message and set zhop value for resume to 0
            SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=zhop VALUE=0
        {% endif %}
        G90                                                                                                                 ; absolute positioning
        G1 X{printer.toolhead.axis_maximum.x/2} Y{printer.toolhead.axis_minimum.y+5} F19500                                 ; park toolhead at front center
        SAVE_GCODE_STATE NAME=PAUSEPARK                                                                                     ; save parked position in case toolhead is moved during the pause (otherwise the return zhop can error) 
        M104 S0                                                                                                             ; turn off hotend
        SET_IDLE_TIMEOUT TIMEOUT=43200                                                                                      ; set timeout to 12 hours
    {% endif %}

# Return Z hop back down 10mm, prime nozzle, resume print.
[gcode_macro RESUME]
rename_existing: BASE_RESUME
variable_zhop: 0
variable_etemp: 0
gcode:
    # Parameters
    {% set e = params.E|default(2.5)|int %}                                                                             ; nozzle prime amount
    
    SET_FILAMENT_SENSOR SENSOR=filament_sensor ENABLE=1                                                                 ; enable filament sensor
    SET_IDLE_TIMEOUT TIMEOUT={printer.configfile.settings.idle_timeout.timeout}                                         ; set timeout back to configured value
    {% if etemp > 0 %}
        M109 S{etemp|int}                                                                                               ; wait for hotend to heat back up
    {% endif %}
    RESTORE_GCODE_STATE NAME=PAUSEPARK MOVE=1 MOVE_SPEED=180                                                            ; go back to parked position in case toolhead was moved during pause (otherwise the return zhop can error)  
    G91                                                                                                                 ; relative positioning
    M83                                                                                                                 ; relative extruder positioning
    {% if printer[printer.toolhead.extruder].temperature >= printer.configfile.settings.extruder.min_extrude_temp %}                                                
        G1 Z{zhop * -1} E{e} F900                                                                                       ; prime nozzle by E, lower Z back down
    {% else %}                      
        G1 Z{zhop * -1} F900                                                                                            ; lower Z back down without priming (just in case we are testing the macro with cold hotend)
    {% endif %}                             
    RESTORE_GCODE_STATE NAME=PAUSE MOVE=1 MOVE_SPEED=180                                                                ; restore position
    BASE_RESUME     

# Filament runout / change alias    
[gcode_macro M600]
gcode:
    PAUSE
    
# Disable filament senor on startup, only enable during prints (in PRINT_START/PRINT_END)
[delayed_gcode DISABLEFILAMENTSENSOR]   
initial_duration: 1
gcode:
    SET_FILAMENT_SENSOR SENSOR=filament_sensor ENABLE=0
    
######################### CONFIG BACKUP #########################

# https://github.com/th33xitus/kiauh/wiki/How-to-autocommit-config-changes-to-github%3F
[gcode_macro BACKUP_CFG]
gcode:
    RUN_SHELL_COMMAND CMD=backup_cfg
    
[gcode_shell_command backup_cfg]
command: sh /home/pi/gitbackup.sh
timeout: 30.
verbose: True

######################### TESTING #########################
    
# Dump all Klipper parameters to terminal, helps find names and values of variables for use in macros

[gcode_macro DUMP_PARAMETERS]
gcode:
   {% for name1 in printer %}
      {% for name2 in printer[name1] %}
         { action_respond_info("printer['%s'].%s = %s" % (name1, name2, printer[name1][name2])) }
      {% else %}
         { action_respond_info("printer['%s'] = %s" % (name1, printer[name1])) }
      {% endfor %}
   {% endfor %}

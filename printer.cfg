[include menu.cfg]
[include uart.cfg]
[include macros.cfg]

[exclude_object]

[mcu]
#serial: /dev/serial/by-id/usb-Klipper_lpc1768_09400114618445AF4DC1D65CC52000F5-if00
serial: /dev/ttyAMA0
restart_method: command

#### Fluidd ####

[display_status]

################

[printer]
kinematics: cartesian
max_velocity: 180
max_accel: 2500
max_z_velocity: 5
max_z_accel: 100
square_corner_velocity: 5

[stepper_x]
step_pin: P2.2
dir_pin: P2.6
enable_pin: !P2.1
rotation_distance: 40
full_steps_per_rotation: 400
microsteps: 16
endstop_pin: P1.29
position_min: 0
position_endstop: 0
position_max: 250
homing_speed: 100
second_homing_speed: 30
homing_retract_dist: 5
homing_positive_dir: false

[stepper_y]
step_pin: P0.19
dir_pin: P0.20
enable_pin: !P2.8
rotation_distance: 40
full_steps_per_rotation: 400
microsteps: 16
endstop_pin: P1.28
position_min: -8
#position_endstop: -13.5
position_endstop: -8
position_max: 232
homing_speed: 80
second_homing_speed: 30
homing_retract_dist: 5
homing_positive_dir: false

[stepper_z]
# Stock actual: 0.725a (90% of 0.84a max)
# Currents are in RMS (actual = RMS * sqrt(2))
step_pin: P0.22
dir_pin: P2.11
enable_pin: !P0.21
full_steps_per_rotation: 200
rotation_distance: 8
microsteps: 16
endstop_pin: probe:z_virtual_endstop
position_min: -3
#position_endstop: 0
position_max: 240
homing_speed: 10
second_homing_speed: 5
homing_retract_dist: 3

[extruder]
step_pin: P2.13
dir_pin: P0.11
enable_pin: !P2.12
# FORMULA: step_distance = old_e_steps * ((actual extruded distance) / 100)
full_steps_per_rotation: 200
rotation_distance: 5.7094047706753546739712
microsteps: 16
nozzle_diameter: 0.400
filament_diameter: 1.750
heater_pin: P2.7
max_power: 1.0
# Creality hotend
#sensor_type: EPCOS 100K B57560G104F
# Maxiwatt
#sensor_type: NTC 100K beta 3950
#v6
sensor_type: ATC Semitec 104GT-2
sensor_pin: P0.24
smooth_time: 2.0
#control: pid
# tuned for stock hardware with 200 degree Celsius target
#pid_Kp: 21.527
#pid_Ki: 1.063
#pid_Kd: 108.982
min_temp: 0
max_temp: 270
min_extrude_temp: 170
max_extrude_only_distance: 1000
#max_extrude_cross_section:
#   Maximum area (in mm^2) of an extrusion cross section (eg.
#   extrusion width multiplied by layer height). This setting prevents
#   excessive amounts of extrusion during relatively small XY moves.
#   If a move requests an extrusion rate that would exceed this value
#   it will cause an error to be returned. The default is: 4.0 *
#   nozzle_diameter^2
#max_extrude_only_velocity:
#max_extrude_only_accel:
#   Maximum velocity (in mm/s) and acceleration (in mm/s^2) of the
#   extruder motor for retractions and extrude-only moves. These
#   settings do not place any limit on normal printing moves. If not
#   specified then they are calculated to match the limit an XY
#   printing move with a cross section of 4.0*nozzle_diameter^2 would
#   have.
pressure_advance: 0
# Use TEMPADJUSTPA macro
pressure_advance_smooth_time: 0.02

[heater_bed]
heater_pin: P2.5
sensor_type: EPCOS 100K B57560G104F
sensor_pin: P0.25
#control: pid
# tuned for stock hardware with 50 degree Celsius target
#pid_Kp: 54.027
#pid_Ki: 0.770
#pid_Kd: 948.182
min_temp: 0
max_temp: 115

[fan]
# Print Cooling Fan
pin: P2.3
kick_start_time: 1
off_below: 0.05
cycle_time: 0.05

[heater_fan hotend_fan]
# Hotend AND controller fan (wired together)
pin: P2.4
max_power: 1.0
kick_start_time: 0.5
heater: extruder
heater_temp: 80
fan_speed: 0.8
cycle_time: 0.05

[verify_heater heater_bed]
max_error: 120
#   The maximum "cumulative temperature error" before raising an
#   error. Smaller values result in stricter checking and larger
#   values allow for more time before an error is reported.
#   Specifically, the temperature is inspected once a second and if it
#   is close to the target temperature then an internal "error
#   counter" is reset; otherwise, if the temperature is below the
#   target range then the counter is increased by the amount the
#   reported temperature differs from that range. Should the counter
#   exceed this "max_error" then an error is raised. The default is
#   120.
check_gain_time: 120
#   This controls heater verification during initial heating.  Smaller
#   values result in stricter checking and larger values allow for
#   more time before an error is reported. Specifically, during
#   initial heating, as long as the heater increases in temperature
#   within this time frame (specified in seconds) then the internal
#   "error counter" is reset. The default is 20 seconds for extruders
#   and 60 seconds for heater_bed.
hysteresis: 5
#   The maximum temperature difference (in Celsius) to a target
#   temperature that is considered in range of the target. This
#   controls the max_error range check. It is rare to customize this
#   value. The default is 5.
heating_gain: 2
#   The minimum temperature (in Celsius) that the heater must increase
#   by during the check_gain_time check. It is rare to customize this
#   value. The default is 2.

[verify_heater extruder]
max_error: 120
check_gain_time: 20
hysteresis: 5
heating_gain: 2

[safe_z_home]
home_xy_position: 152,120.5
speed: 180
z_hop: 8
z_hop_speed: 5
#move_to_previous: False

# BLTouch probe. One may define this section (instead of a probe
# section) to enable a BLTouch probe. See the docs/BLTouch.md guide
# for further information on configuring a BLTouch. A virtual
# "probe:z_virtual_endstop" pin is also created (see the "probe"
# section above for the details).
[bltouch]
sensor_pin: P0.10
#   Pin connected to the BLTouch sensor pin. This parameter must be
#   provided.
control_pin: P2.0
#   Pin connected to the BLTouch control pin. This parameter must be
#   provided.
#pin_move_time: 0.680
#   The amount of time (in seconds) to wait for the BLTouch pin to
#   move up or down. The default is 0.680 seconds.
#stow_on_each_sample: True
#   This determines if Klipper should command the pin to move up
#   between each probe attempt when performing a multiple probe
#   sequence. Read the directions in docs/BLTouch.md before setting
#   this to False. The default is True.
#probe_with_touch_mode: True
#   If this is set to True then Klipper will probe with the device in
#   "touch_mode". The default is False (probing in "pin_down" mode).
#pin_up_reports_not_triggered: True
#   Set if the BLTouch consistently reports the probe in a "not
#   triggered" state after a successful "pin_up" command. This should
#   be True for all genuine BLTouch devices. Read the directions in
#   docs/BLTouch.md before setting this to False. The default is True.
#pin_up_touch_mode_reports_triggered: False
#   Set if the BLTouch consistently reports a "triggered" state after
#   the commands "pin_up" followed by "touch_mode". This should be
#   True for all genuine BLTouch devices. Read the directions in
#   docs/BLTouch.md before setting this to False. The default is True.
#set_output_mode:
#   Request a specific sensor pin output mode on the BLTouch V3.0 (and
#   later). This setting should not be used on other types of probes.
#   Set to "5V" to request a sensor pin output of 5 Volts (only use if
#   the controller board needs 5V mode and is 5V tolerant on its input
#   signal line). Set to "OD" to request the sensor pin output use
#   open drain mode. The default is to not request an output mode.
x_offset: -36.5 # negative = left of the nozzle
y_offset: -3 # negative = in front of of the nozzle
#z_offset: 0
speed: 4
samples: 1
#sample_retract_dist:
#samples_result:
#samples_tolerance:
#samples_tolerance_retries:
#   See the "probe" section for information on these parameters.

##[(7x7)-1] / 2 = 24
##[(5x5)-1] / 2 = 12
[bed_mesh]
speed: 180
horizontal_move_z: 8
#sample_retract_dist: 5
mesh_min: 10,10
mesh_max: 213,225
probe_count: 5,5
relative_reference_index: 12
algorithm: bicubic
#fade_start: 1
#fade_end: 10
#fade_target:
#   The z position in which fade should converge. When this value is set
#   to a non-zero value it must be within the range of z-values in the mesh.
#   Users that wish to converge to the z homing position should set this to 0.
#   Default is the average z value of the mesh.
split_delta_z: 0.015
#   The amount of Z difference (in mm) along a move that will
#   trigger a split. Default is .025.
move_check_distance: 3
#   The distance (in mm) along a move to check for split_delta_z.
#   This is also the minimum length that a move can be split. Default
#   is 5.0.
mesh_pps: 4,4
#   A comma separated pair of integers (X,Y) defining the number of
#   points per segment to interpolate in the mesh along each axis. A
#   "segment" can be defined as the space between each probed
#   point. The user may enter a single value which will be applied
#   to both axes.  Default is 2,2.
#bicubic_tension: .2
#   When using the bicubic algorithm the tension parameter above
#   may be applied to change the amount of slope interpolated.
#   Larger numbers will increase the amount of slope, which
#   results in more curvature in the mesh. Default is .2.

# Creality Ender-3 / CR-10 Full Graphic Smart Controller
# Found at https://github.com/KevinOConnor/klipper/issues/1607
[display]
lcd_type: st7920
cs_pin: P1.19
sclk_pin: P1.21
sid_pin: P1.23
encoder_pins: ^P1.20, ^P1.18
click_pin: !P0.28
menu_timeout: 60

[output_pin beeper]
pin: P1.30

[firmware_retraction]
retract_length: 3
retract_speed: 45
unretract_speed: 45
unretract_extra_length: 0

[idle_timeout]
gcode:
    {% if "xyz" in printer.toolhead.homed_axes %}
        G91                                                                                                 ; relative positioning
        G1 Z5 F1800                                                                                         ; move up 5mm
        G90                                                                                                 ; absolute positioning
        G0 Y{printer.toolhead.axis_maximum.y-5} F1800                                                       ; move bed forwards
    {% endif %}
    OFF
# 30 min
timeout: 1800

[virtual_sdcard]
#path: ~/.octoprint/uploads/
path: ~/gcode_files
on_error_gcode:
  CANCEL_PRINT

#Pause/Resume Functionality
[pause_resume]

#[filament_switch_sensor filament_sensor]
#pause_on_runout: True
#insert_gcode:
#runout_gcode:
#   M117 Runout Detected
#   M600
#switch_pin: !P1.27

[filament_motion_sensor filament_sensor]
detection_length: 10
extruder: extruder
switch_pin: ^P1.27
pause_on_runout: True
#insert_gcode:
runout_gcode:
    PAUSE
    BEEP I=12
#event_delay:
#   The minimum amount of time in seconds to delay between events.
#   Events triggered during this time period will be silently
#   ignored. The default is 3 seconds.
#pause_delay: 0.5
#   The amount of time to delay, in seconds, between the pause command
#   dispatch and execution of the runout_gcode. It may be useful to
#   increase this delay if OctoPrint exhibits strange pause behavior.
#   Default is 0.5 seconds.

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [extruder]
#*# control = pid
#*# pid_kp = 24.827
#*# pid_ki = 1.547
#*# pid_kd = 99.617
#*#
#*# [heater_bed]
#*# control = pid
#*# pid_kp = 69.790
#*# pid_ki = 1.723
#*# pid_kd = 706.619
#*#
#*# [bltouch]
#*# z_offset = 2.880
#*#
#*# [bed_mesh default]
#*# version = 1
#*# points =
#*#       -0.110000, -0.040000, 0.102500, 0.202500, 0.267500
#*#       -0.085000, -0.047500, 0.015000, 0.092500, 0.137500
#*#       -0.062500, -0.045000, 0.000000, 0.050000, 0.092500
#*#       -0.142500, -0.105000, -0.075000, -0.002500, 0.080000
#*#       -0.200000, -0.187500, -0.130000, -0.060000, -0.005000
#*# tension = 0.2
#*# min_x = 10.0
#*# algo = bicubic
#*# y_count = 5
#*# mesh_y_pps = 4
#*# min_y = 10.0
#*# x_count = 5
#*# max_y = 225.0
#*# mesh_x_pps = 4
#*# max_x = 213.0
